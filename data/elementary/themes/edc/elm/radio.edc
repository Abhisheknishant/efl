group { name: "elm/radio/base/default";
   images.image: "radio.png" COMP;
   script {
      BUTTONMODE_SCRIPT
   }
   parts {
      part { name: "shadow"; type: SPACER;
         description { state: "default";
         }
         desc { "pressed"; inherit;
         }
         desc { "disabled"; inherit;
         }
      }
      swallow { "elm.swallow.background"; nomouse;
         desc { "default";
            visible: 0;
         }
         desc { "visible"; inherit;
            visible: 1;
         }
      }
      rect { "icon_clip";
         desc { "default";
            color_class: "button_icon";
         }
         desc { "pressed"; inherit;
            color_class: "button_icon_pressed";
         }
         desc { "disabled"; inherit;
            color_class: "button_icon_disabled";
         }
      }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         scale: 1;
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.to_x: "base";
            rel2.to_x: "base";
            rel1.offset: 4 4;
            rel1.relative: 1.0 0.0;
            rel2.relative: 0.0 1.0;
            rel2.offset: 4 -5;
            visible: 0;
            offscale;
         }
         desc { "visible"; inherit;
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly"; inherit;
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -5 -5;
            rel2.to_x: "";
            visible: 1;
         }
      }
      text { "sizer_content"; nomouse;
         scale: 1;
         desc { "default";
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button_text";
            }
         }
         desc { "visible"; inherit;
            rel.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: SPACER_TEXT;
            }
         }
         desc { "icononly"; inherit;
            rel.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: SPACER_TEXT;
            }
         }
      }
      part { name: "base"; type: RECT;
         description { state: "default";
            fixed: 1 0;
            align: 0.0 0.5;
            min: 13 13;
            max: 13 13;
            rel1.offset: 4 4;
            rel2.relative: 0.0 1.0;
            rel2.offset: 4 -5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            offscale;
            visible: 0;
         }
         desc { "pressed"; inherit;
         }
         desc { "disabled"; inherit;
         }
      }
      part { name: "ck_check";
         description { state: "default" 0.0;
            fixed: 0 0;
            rel.to: "base";
            image.normal: "radio.png";
            min: 13 13;
            max: 13 13;
            color: 0 0 0 64;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 160 160 160 255;
         }
         desc { "disabled"; inherit;
            color: 0 0 0 16;
         }
      }
      text { "elm.text"; nomouse;
         scale: 1;
         desc { "default";
            fixed: 1 1;
            color: 160 160 160 255;
            rel1.offset: 0 4;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel2.offset: -5 -5;
            text { font: FN; size: 10;
               align: 0.0 0.5;
               min: 0 0;
            }
            visible: 0;
            offscale;
         }
         desc { "visible"; inherit;
            fixed: 0 0;
            rel1.offset: 4 4;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "pressed_visible"; inherit;
            fixed: 0 0;
            color: 255 255 255 255;
            rel1.offset: 4 4;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "textonly"; inherit;
            fixed: 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "pressed_textonly"; inherit;
            fixed: 0 0;
            color: 255 255 255 255;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_visible"; inherit;
            fixed: 0 0;
            color: 96 96 96 255;
            rel1.offset: 4 4;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_textonly"; inherit;
            fixed: 0 0;
            color: 96 96 96 255;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
      }
      rect { "event";
         ignore_flags: ON_HOLD;
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled"; inherit;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,radio,toggle" "elm";
      }
      program {
         signal: "elm,state,radio,on"; source: "elm";
         action:  STATE_SET "selected" 0.0;
         target: "ck_check";
      }
      program {
         signal: "elm,state,radio,off"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "ck_check";
      }
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program {
         signal: "mouse,down,1"; source: "event";
         action: STATE_SET "pressed" 0.0;
         target: "ck_check";
      }
      program { name: "button_click_anim";
         script { flag_set(PRESSED); }
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program {
         signal: "mouse,up,1"; source: "event";
         action: STATE_SET "default" 0.0;
         target: "ck_check";
      }
      program { name: "button_unclick_anim";
         script { flag_unset(PRESSED); }
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "pressed" 0.0;
         target: "ck_check";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         in: 0.5 0.0;
         action: STATE_SET "default" 0.0;
         target: "ck_check";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script { flag_set(LABEL); }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script { flag_unset(LABEL); }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script { flag_set(ICON); }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         script { flag_unset(ICON); }
      }
      program { name: "button_background_visible";
         signal: "elm,state,background,visible"; source: "elm";
         script { flag_set(BACKGROUND); }
      }
      program { name: "button_background_hidden";
         signal: "elm,state,background,hidden"; source: "elm";
         script { flag_unset(BACKGROUND); }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script { flag_set(DISABLE); }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script { flag_unset(DISABLE); }
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action:  STATE_SET "disabled" 0.0;
         target: "ck_check";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "ck_check";
      }
   }
}

group { name: "elm/radio/base/plain";
   alias: "elm/check/base/plain";
   images.image: "button_normal.png" COMP;
   images.image: "button_clicked.png" COMP;
   images.image: "horizontal_separated_bar_small_glow.png" COMP;
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
#define SELECTED 8
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         new s = m & SELECTED;
         if (s) {
            set_state(PART:"base", "selected", 0.0);
            set_state(PART:"bar", "selected", 0.0);
         } else {
            set_state(PART:"base", "default", 0.0);
            set_state(PART:"bar", "default", 0.0);
         }
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer_content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer_content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer_content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer_content", "icononly", 0.0);
               set_state(PART:"elm.text", "disabled", 0.0);
               set_state(PART:"base", "disabled", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      part { name: "base"; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: -1 0;
            rel2.offset: 0 1;
            image.normal: "button_normal.png";
            image.border: 4 4 3 5;
            image.middle: SOLID;
            fill.smooth: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "button_clicked.png";
            image.border: 5 5 4 6;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "clip"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         scale: 1;
         clip_to: "clip";
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            max: 0 0;
            rel1.offset: 6 5;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 6 -8;
            rel2.to: "base";
         }
         description { state: "icononly" 0.0;
           inherit: "default" 0.0;
            visible: 1;
            align: 0.5 0.5;
            max: 9999 9999;
            min: 16 16;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            max: 9999 9999;
            min: 16 16;
         }
      }
      part { name: "sizer_content"; type: TEXT; mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "radio_text";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: 2 4;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.to_y: "base";
            rel2.offset: -8 -8;
            rel2.to: "base";
            color: FN_COL_DEFAULT;
            color_class: "radio_text";
            text { font: FN; size: 10;
              min: 0 0;
              align: 0.0 0.5;
              text_class: "radio";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "radio_text_disabled";
            color3: 255 255 255 255;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            text.ellipsis: -1;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color_class: "radio_text_disabled";
            color3: 255 255 255 255;
            visible: 1;
            text.min: 1 1;
            text.ellipsis: -1;
         }
      }
      image { "bar"; nomouse;
         desc { "default";
            image.normal: "horizontal_separated_bar_small_glow.png";
            image.border: 4 4 4 4;
            fill.smooth: 0;
            fill.smooth: 0;
            fixed: 0 1;
            rel.to: "base";
            rel1.relative: 0.0 1.0;
            rel1.offset: 1 -12;
            rel2.offset: -2 -3;
            color: 255 255 255 0;
            visible: 0;
         }
         desc { "selected";
           inherit: "default";
           color: 255 255 255 255;
           visible: 1;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { signal: "mouse,down,1"; source: "event";
         action:  STATE_SET "selected" 0.0;
         target: "base";
      }
      program { signal: "mouse,up,1"; source: "event";
         script {
            new m = get_int(btmode);
            eval_mode(m);
         }
      }
      program { signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,radio,toggle" "elm";
      }
      program { signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,check,toggle" "elm";
      }
      program { signal: "elm,state,*,on"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= SELECTED; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,*,off"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~SELECTED; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,icon,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/radio/base/icon";
   alias: "elm/check/base/icon";
   images.image: "button_normal.png" COMP;
   images.image: "button_clicked.png" COMP;
   images.image: "horizontal_separated_bar_small_glow.png" COMP;
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
#define SELECTED 8
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         new s = m & SELECTED;
         if (s) {
            set_state(PART:"base", "selected", 0.0);
            set_state(PART:"bar", "selected", 0.0);
         } else {
            set_state(PART:"base", "default", 0.0);
            set_state(PART:"bar", "default", 0.0);
         }
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer_content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer_content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer_content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer_content", "icononly", 0.0);
               set_state(PART:"elm.text", "disabled", 0.0);
               set_state(PART:"base", "disabled", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer_content", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      part { name: "base"; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: -1 0;
            rel2.offset: 0 1;
            image.normal: "button_normal.png";
            image.border: 4 4 3 5;
            image.middle: SOLID;
            fill.smooth: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "button_clicked.png";
            image.border: 5 5 4 6;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "clip"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         scale: 1;
         clip_to: "clip";
         description { state: "default" 0.0;
            fixed: 0 1;
            visible: 0;
            align: 0.5 0.0;
            max: 0 0;
            rel1.offset: 6 2;
            rel1.to: "base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -7 2;
            rel2.to: "base";
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            align: 0.5 0.5;
            max: 9999 9999;
            min: 16 16;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            visible: 1;
            rel1.offset: 6 5;
            rel2.offset: -7 5;
            aspect: 1.0 1.0;
            max: 9999 9999;
            min: 16 16;
         }
      }
      part { name: "sizer_content"; type: TEXT; mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "radio_text";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: 6 2;
            rel1.to_y: "elm.swallow.content";
            rel1.relative: 0.0 1.0;
            rel2.offset: -8 -8;
            rel2.to: "base";
            color: FN_COL_DEFAULT;
            color_class: "radio_text";
            text { font: FN; size: 10;
              min: 0 0;
              align: 0.5 1.0;
              text_class: "radio";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "radio_text_disabled";
            color3: 255 255 255 255;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            text.ellipsis: -1;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color_class: "radio_text_disabled";
            color3: 255 255 255 255;
            visible: 1;
            text.min: 1 1;
            text.ellipsis: -1;
         }
      }
      image { "bar"; nomouse;
         desc { "default";
            image.normal: "horizontal_separated_bar_small_glow.png";
            image.border: 4 4 4 4;
            fill.smooth: 0;
            fill.smooth: 0;
            fixed: 0 1;
            rel.to: "base";
            rel1.relative: 0.0 1.0;
            rel1.offset: 1 -12;
            rel2.offset: -2 -3;
            color: 255 255 255 0;
            visible: 0;
         }
         desc { "selected";
           inherit: "default";
           color: 255 255 255 255;
           visible: 1;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { signal: "mouse,down,1"; source: "event";
         action:  STATE_SET "selected" 0.0;
         target: "base";
      }
      program { signal: "mouse,up,1"; source: "event";
         script {
            new m = get_int(btmode);
            eval_mode(m);
         }
      }
      program { signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,radio,toggle" "elm";
      }
      program { signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,check,toggle" "elm";
      }
      program { signal: "elm,state,*,on"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= SELECTED; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,*,off"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~SELECTED; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,icon,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}
