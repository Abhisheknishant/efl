#ifdef GL_ES
precision highp float;
#endif
attribute vec4 vertex, color;
attribute vec2 tex_coord, tex_coordm, tex_sample, tex_coorda;
uniform mat4 mvp;
varying vec2 tex_c, tex_m;
varying vec4 col;
void main()
{
   gl_Position = mvp * vertex;
   tex_c = tex_coord;
   col = color;

   // tex_coorda contains the Y-invert flag
   // tex_coordm contains the X,Y position of the mask
   // tex_sample contains the W,H size of the mask (inverted)

   vec4 mask_Position = mvp * vertex * vec4(tex_coorda.x * 0.5, tex_coorda.y * 0.5, 0.5, 0.5) + vec4(0.5, 0.5, 0, 0);
   tex_m = vec2(mask_Position.xy - tex_coordm) * tex_sample;
}
