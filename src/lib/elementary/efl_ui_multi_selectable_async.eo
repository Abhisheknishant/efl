import efl_ui;

interface @beta Efl.Ui.Multi_Selectable_Async extends Efl.Ui.Single_Selectable
{
   [[Interface for getting access to a range of selected items for widget that provide item asynchronously.

     The implementor of this interface provides the possibility to select multiple Selectables.
     If not, only @Efl.Ui.Single_Selectable should be implemented.
     A widget can only provide either this interface or @Efl.Ui.Multi_Selectable, but not both.]]
   methods
   {
      @property select_mode {
         [[The mode type for children selection.]]
         set {}
         get {}
         values {
         mode: Efl.Ui.Select_Mode; [[Type of selection of children]]
         }
      }
      selected_items_get {
         [[Get the selected items in a iterator. The iterator sequence will be decided by selection.]]
         return: iterator<uint64> @move @no_unused; [[User has to free the iterator after usage.]]
      }
      select_range {
         [[Select a range of @Efl.Ui.Selectable.

           This will select the range of selectables from a to b or from b to a depending on which one comes first.
           If a or b are not in the range the widget, an error is returned, and no change is applied.
           Both of the passed values will also be selected.
         ]]
         params {
           a : uint64; [[One side of the range.]]
           b : uint64; [[The other side of the range.]]
         }
      }
      unselect_range {
         [[Unselect a range of @Efl.Ui.Selectable.

           This will unselect the range of selectables from a to b or from b to a depending on which one comes first.
           If a or b are not in the range of the widget, an error is returned, and no change is applied.
           Both of the passed values will also be unselected.
         ]]
         params {
           a : uint64; [[One side of the range.]]
           b : uint64; [[The other side of the range.]]
         }
      }
      select_all {
         [[Select all @Efl.Ui.Selectable]]
      }
      unselect_all {
         [[Unselect all @Efl.Ui.Selectable]]
      }
   }
}
