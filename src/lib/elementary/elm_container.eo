class Elm.Container (Elm.Widget)
{
   legacy_prefix: null;
   eo_prefix: elm_obj_container;
   data: null;
   methods {
      @property content {
         [[Swallowed sub-object contained in this object.]]
         set {
            return: bool;
         }
         get {}
         keys {
            name: const(char)*; [[the part in which to swallow the object]]
         }
         values {
            content: Evas.Object*; [[the object to swallow.]]
         }
      }
      content_unset {
         [[Unswallow the object in the given part of the container and return it.]]
         params {
            @in name: const(char)* @nullable;
         }
         return: Evas.Object *;
      }
      content_names_iterate {
         [[Returns an iterator on all parts in this container that currently
           hold a sub-object.]]
         return: free(own(iterator<const(char)*> *), eina_iterator_free);
      }
      content_objects_iterate {
         [[Returns an iterator on all swallowed objects in this container.]]
         return: free(own(iterator<Evas.Object*> *), eina_iterator_free);
      }
   }
   implements {
      @virtual .content_unset;
      @virtual .content.get;
      @virtual .content.set;
      @virtual .content_names_iterate;
      @virtual .content_objects_iterate;
   }

}
