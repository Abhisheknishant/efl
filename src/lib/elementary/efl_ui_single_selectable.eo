interface @beta Efl.Ui.Single_Selectable {
   [[Interface for getting access to a single selected item in the implementor.

     The implementor is free to allow a specific number of selectables beeing selected or not. This interface just covers always the latest selected selectable.
   ]]
   methods {
      @property last_selected {
        [[The selectable that was selected most recently.]]
        get {

        }
        values {
          selectable : Efl.Ui.Selectable; [[The latest selected item.]]
        }
      }
      @property fallback_selection {
         [[A object that will be selected in case nothing is selected

           A object set to this property will be selected instead of no item beeing selected. Which means, there will be always at least one element selected.
           If this property is NULL, the state of "no item is selected" can be reached.

           Setting this property as a result of selection events results in undefined behavior.
         ]]
         values {
            fallback : Efl.Ui.Selectable;
         }
      }
   }
   events {
      selection_changed : void; [[Called when there is a change in the selection state, this event will collect all the item selection change events that are happening within one loop iteration. This means, you will only get this event once, even if a lot of items have changed. If you are interested in detailed changes, subscribe to the selection,changed event of Efl.Ui.Selectable.]]
   }
}
