type slider_func_type: __undefined_type; [[Elementary slider function type]]
type slider_freefunc_type: __undefined_type; [[Elementary slider free function type]]

class Efl.Ui.Slider (Efl.Ui.Layout, Efl.Ui.Range, Efl.Ui.Direction,
                     Efl.Access.Value, Efl.Text, Efl.Text.Markup, Efl.Ui.Format,
                     Efl.Ui.Translatable, Elm.Interface.Atspi_Widget_Action)
{
   [[Elementary slider class]]
   legacy_prefix: elm_slider;
   methods {
      @property indicator_show {
         set {
            [[Set whether to enlarge slider indicator (augmented knob) or not.

              By default, indicator will be bigger while dragged by the user.

            ]]
         }
         get {
            [[Get whether a given slider widget's enlarging indicator or not.]]
         }
         values {
            show: bool; [[$true will make it enlarge, $false will
                          let the knob always at default size.]]
         }
      }
      @property indicator_show_on_focus {
         set {
            [[Show the indicator of slider on focus.]]
         }
         get {
            [[Get whether the indicator of the slider is set or not.]]
         }
         values {
            flag: bool; [[$true if indicator is shown on focus, $false otherwise]]
         }
      }
      @property step {
         set {
            [[Set the step by which slider indicator will move.

              This value is used when draggable object is moved automatically
              i.e., in case of key event when up/down/left/right key is pressed
              or in case when accessibility is set and flick event is used to
              inc/dec slider values. By default step value is equal to 0.05.

              @since 1.8
            ]]
         }
         get {
            [[Get the step by which slider indicator moves.

              @since 1.8
            ]]
         }
         values {
            step: double; [[The step value.]]
         }
      }
      @property indicator_visible_mode {
         [[Set/Get the visible mode of indicator.
         ]]
         values {
            indicator_visible_mode: Efl.Ui.Slider.Indicator_Visible_Mode; [[The indicator visible mode.]]
         }
      }
   }
   parts {
      indicator: Efl.Ui.Slider.Part; [[A floating indicator above the slider.]]
   }
   implements {
      class.constructor;
      Efl.Object.constructor;
      Efl.Canvas.Group.group_calculate;
      Elm.Widget.theme_apply;
      Elm.Widget.on_access_activate;
      Elm.Widget.on_focus_update;
      Elm.Widget.widget_event;
      Efl.Ui.Range.range_value { get; set; }
      Efl.Ui.Range.range_min_max {get; set; }
      Efl.Ui.Direction.direction { get; set; }
      Efl.Access.Value.value_and_text { get; set; }
      Efl.Access.Value.range { get; }
      Efl.Access.Value.increment { get; }
      Elm.Interface.Atspi_Widget_Action.elm_actions { get; }
      Efl.Text.text { get; set; }
      Efl.Text.Markup.markup { get; set; }
      Efl.Ui.Format.format_cb { set; }
      Efl.Ui.Translatable.translatable_text { get; set; }
      Efl.Part.part;
   }
   events {
      changed; [[Called when slider changed]]
      delay,changed; [[Called when delay changed]]
      slider,drag,start; [[Called when slider drag started]]
      slider,drag,stop; [[Called when slider drag stopped]]
   }
}
