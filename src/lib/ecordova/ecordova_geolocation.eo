type Ecordova_Geolocation_WatchID: int;

struct Ecordova_Geolocation_Coordinates {
    [[A Coordinates object is attached to a Position object that is available
      to callback functions in requests for the current position. It contains
      a set of properties that describe the geographic coordinates of a
      position.]]

    latitude: double;
    [[Latitude in decimal degrees.]]

    longitude: double;
    [[Longitude in decimal degrees.]]

    altitude: double;
    [[Height of the position in meters above the ellipsoid.]]

    accuracy: double;
    [[Accuracy level of the latitude and longitude coordinates in meters.]]

    altitude_accuracy: double;
    [[Accuracy level of the altitude coordinate in meters.]]

    heading: double;
    [[Direction of travel, specified in degrees counting clockwise relative to
      the true north.]]

    speed: double;
    [[Current ground speed of the device, specified in meters per second.]]
}

struct Ecordova_Geolocation_Position {
    [[Contains Position coordinates and timestamp, created by the geolocation API.]]

    coords: Ecordova_Geolocation_Coordinates;
    [[A set of geographic coordinates.]]

    timestamp: time;
    [[Creation timestamp for coords.]]
}

struct Ecordova_Geolocation_Options {
    enable_high_accuracy: bool;
    [[Provides a hint that the application needs the best possible results. By
      default, the device attempts to retrieve a Position using network-based
      methods. Setting this property to true tells the framework to use more
      accurate methods, such as satellite positioning.]]

    timeout: int;
    [[The maximum length of time (milliseconds) that is allowed to pass from
      the call to navigator.geolocation.current_position_get or
      geolocation.position_watch until the corresponding geolocationSuccess
      callback executes. If the geolocationSuccess callback is not invoked
      within this time, the geolocationError callback is passed a
      PositionError.TIMEOUT error code. (Note that when used in conjunction
      with geolocation.position_watch, the geolocationError callback could be
      called on an interval every timeout milliseconds!)]]

    maximum_age: int;
    [[Accept a cached position whose age is no greater than the specified time
      in milliseconds.]]
}

enum Ecordova_Geolocation_ErrorCode {
    PERMISSION_DENIED,
    [[Returned when users do not allow the app to retrieve position
      information. This is dependent on the platform.]]

    POSITION_UNAVAILABLE,
    [[Returned when the device is unable to retrieve a position. In general,
      this means the device is not connected to a network or can't get a
      satellite fix.]]

    TIMEOUT
    [[Returned when the device is unable to retrieve a position within the
      time specified by the timeout included in geolocationOptions. When used
      with navigator.geolocation.position_watch, this error could be repeatedly
      passed to the geolocationError callback every timeout milliseconds.]]
}

struct Ecordova_Geolocation_Error {
    [[The PositionError object is passed to the geolocationError callback
      function when an error occurs with navigator.geolocation.]]

    code: int;
    [[One of the predefined error codes listed above.]]

    message: const(char)*;
    [[Error message describing the details of the error encountered.]]
}

class Ecordova.Geolocation (Eo.Base) {
    [[Ecordova Geolocation Plugin
      Plugin ID: org.apache.cordova.geolocation
      http://plugins.cordova.io/#/package/org.apache.cordova.geolocation
    ]]
    legacy_prefix: null;
    methods {
        constructor {
            [[Custom Ecordova_Geolocation constructor.
              @.constructor

              @since 2.3
            ]]
        }
        current_position_get {
            [[Returns the device's current position to the geolocationSuccess
              callback with a Position object as the parameter. If there is an
              error, the geolocationError callback is passed a PositionError
              object.]]
            params {
                options: const(Ecordova_Geolocation_Options)*;
                [[The geolocation options.]]
            }
        }
        position_watch {
            [[Returns the device's current position when a change in position
              is detected. When the device retrieves a new location, the
              geolocationSuccess callback executes with a Position object as
              the parameter. If there is an error, the geolocationError
              callback executes with a PositionError object as the parameter.]]
            params {
                options: const(Ecordova_Geolocation_Options)*;
                [[The geolocation options.]]
            }
            return: Ecordova_Geolocation_WatchID;
            [[returns a watch id that references the watch position interval.
              The watch id should be used with navigator.geolocation.watch_clear
              to stop watching for changes in position.]]
        }
        watch_clear {
            [[Stop watching for changes to the device's location referenced by
              the watchID parameter.]]
            params {
                watch_id: Ecordova_Geolocation_WatchID;
                [[The id of the position_watch interval to clear.]]
            }
        }
    }
    implements {
        Eo.Base.constructor;
        Eo.Base.destructor;
    }
    constructors {
        .constructor;
    }
    events {
        current,success: Ecordova_Geolocation_Position*;
        watch,success: Ecordova_Geolocation_Position*;
        error: Ecordova_Geolocation_Error*;
    }
}
