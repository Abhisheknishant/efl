struct Ecordova_InAppBrowser_InjectDetails {
    file: const(char)*; [[URL of the script/stylesheet to inject.]]
    code: const(char)*; [[Text of the script/stylesheet to inject.]]
}

struct Ecordova_InAppBrowser_EventProperties {
    type: const(char)*; [[the eventname, either loadstart, loadstop, loaderror, or exit.]]
    url: const(char)*; [[the URL that was loaded.]]
    code: const(char)*; [[the error code, only in the case of loaderror.]]
    message: const(char)*; [[the error message, only in the case of loaderror.]]
}

class Ecordova.InAppBrowser (Eo.Base) {
    [[Ecordova InAppBrowser Plugin
      Plugin ID: org.apache.cordova.inappbrowser
      http://plugins.cordova.io/#/package/org.apache.cordova.inappbrowser
    ]]
    legacy_prefix: null;
    methods {
        constructor {
            [[Custom Ecordova_InAppBrowser constructor.
              @.constructor

              @since 2.3
            ]]
        }
        open @class {
            params {
                url: const(char)*;
                [[The URL to load. Call encodeURI() on this if the URL
                  contains Unicode characters.]]

                target: const(char)*;
                [[The target in which to load the URL, an optional parameter
                  that defaults to _self.]]

                options: const(hash<char*,char*>)*;
                [[Options for the InAppBrowser. Optional, defaulting
                  to: location=yes.]]

            }
            return: Ecordova.InAppBrowser*;
        }
        close {
            [[Closes the InAppBrowser window.]]
        }
        show {
            [[Displays an InAppBrowser window that was opened hidden. Calling
              this has no effect if the InAppBrowser was already visible.]]
        }
        script_execute {
            [[Injects JavaScript code into the InAppBrowser window]]
            params {
                injectDetails: const(Ecordova_InAppBrowser_InjectDetails)*;
                [[details of the script to run, specifying either a file or
                  code key.]]
            }
        }
        css_insert {
            [[Injects CSS into the InAppBrowser window.]]
            params {
                injectDetails: const(Ecordova_InAppBrowser_InjectDetails)*;
                [[details of the script to run, specifying either a file or
                  code key.]]
            }
        }
    }
    implements {
        Eo.Base.constructor;
        Eo.Base.destructor;
    }
    constructors {
        .constructor;
    }
    events {
        load,start: const(Ecordova_InAppBrowser_EventProperties)*;
        load,stop: const(Ecordova_InAppBrowser_EventProperties)*;
        load,error: const(Ecordova_InAppBrowser_EventProperties)*;
        exit: const(Ecordova_InAppBrowser_EventProperties)*;

        script,executed;
        [[If the injected script is of type code, the callback executes with a
          single parameter, which is the return value of the script, wrapped
          in an Array. For multi-line scripts, this is the return value of the
          last statement, or the last expression evaluated.]]

        css,injected; [[executes after the CSS is injected.]]
    }
}
