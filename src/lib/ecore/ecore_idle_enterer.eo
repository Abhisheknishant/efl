import ecore_types;

class Ecore.Idle.Enterer (Eo.Base)
{
   [[Setup callbacks to be called when the program enters the idle state.

   Enterer callbacks are good for updating your program's state, if it has a state engine.
   ]]
   eo_prefix: ecore_idle_enterer;
   methods {
      before_constructor {
         [[This constructor will insert the handler at the beginning of the list.]]
         legacy: null;
         params {
            @in func: Ecore_Task_Cb; [[Idle enterer callback function.]]
            @in data: const(void)*; [[Private data passed to callback functions.]]
         }
      }
      after_constructor {
         [[This constructor will insert the handler at the end of the list.]]
         legacy: null;
         params {
            @in func: Ecore_Task_Cb; [[Idle enterer callback function.]]
            @in data: const(void)*; [[Private data passed to callback functions.]]
         }
      }
   }
   implements {
      Eo.Base.destructor;
      Eo.Base.finalize;
   }
   constructors {
      .before_constructor;
      .after_constructor;
   }
}
