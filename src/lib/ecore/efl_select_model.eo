class @beta Efl.Select_Model extends Efl.Boolean_Model
{
   [[Efl select model class]]
   methods {
      selected_get {
         [[Get an iterator of all the selected child of this model.
         ]]
         return: iterator<uint64>; [[The iterator give indexes of selected child. It is valid until any change is made on the model.]]
      }
      unselected_get {
         [[Get an iterator of all the child of this model that are not selected.
         ]]
         return: iterator<uint64>; [[The iterator give indexes of unselected child. It is valid until any change is made on the model.]]
      }
      @property single_selection {
         [[Define if we support only one exclusive selection at a time when set to $true.

           If disable with $false, it will have the behavior of a multi select mode.
         ]]
         set { }
         get { }
         values {
            enable: bool; [[$true will enable the exclusive mode.]]
         }
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Model.property { get; set; }
      Efl.Model.properties { get; }
   }
   events {
      /* FIXME: The object is emitted in the event_info. This is redundant. */
      selected: Efl.Object;
      /* FIXME: The object is emitted in the event_info. This is redundant. */
      unselected: Efl.Object;
   }
}
