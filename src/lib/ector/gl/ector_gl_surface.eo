type @extern GLshort: short; /* FIXME: We should not expose this in the API but probably redefine it. */

class Ector.GL.Surface (Ector.GL.Buffer, Ector.Generic.Surface)
{
   eo_prefix: ector_gl_surface;
   legacy_prefix: null;
   methods {
      shader_get {
         return: uint;
         params {
            @in flags: uint64;
         }
      }
      push {
         return: bool;
	 params {
	    @in flags: uint64;
	    @in vertex: GLshort *;
	    @in vertex_count: uint;
	    @in mul_col: uint;
	 }
      }
      state_define {
         return: bool;
	 params {
            @in op: Efl.Gfx.Render_Op;
	    @in clips: array<Eina.Rectangle *> *; [[array of @Eina.Rectangle clip]]
	 }
      }
   }
   implements {
      Ector.Generic.Surface.renderer_factory_new;
      Ector.Generic.Surface.reference_point.set;
      Eo.Base.destructor;
      Eo.Base.constructor;
   }
}
