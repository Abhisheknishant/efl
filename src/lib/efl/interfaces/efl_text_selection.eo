interface Efl.Text.Selection {
   methods {
      @property enable {
         [[Enable or disable selection feature.]]
         set {
         }
         get {
         }
         values {
            enable: bool; [[If $enable is true, the text selection is enabled.]]
         }
      }
      @property region {
         [[This selects a region of text within the object.
         set {
         }
         get {
         }
         values {
            start: int; [[The starting position.]]
            end: int; [[The end position.]]
         }
      }
      @property handler_disabled {
         [[This disabled the selection handlers.]]
         set {
         }
         get {
         }
         values {
            disabled: bool; [[If $true, the selection handlers are disabled.]]
         }
      }
      @property text {
         get {
            [[Get any selected text within the object.

              If there's any selected text in the object, this function returns it as
              a string in markup format. $null is returned if no selection exists or
              if an error occurred.

              The returned value points to an internal string and should not be freed
              or modified in any way. If the object is deleted or its
              contents are changed, the returned pointer should be considered invalid.
            ]]
         }
         values {
            text: const(char)*;
         }
      }
      all {
         [[This selects all text within the object.]]
      }
      none {
         [[This drops any existing text selection within the object.]]
      }
   }
}
