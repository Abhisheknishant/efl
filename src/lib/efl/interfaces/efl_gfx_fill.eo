interface Efl.Gfx.Fill {
   legacy_prefix: null;
   methods {
      @property fill {
         /* FIXME: bad defaults, bad doc */
         [[Specifies how to tile an image to fill its rectangle geometry.

           Note that if $w or $h are smaller than the dimensions of the object,
           the displayed image will be tiled around the object's area. To have
           only one copy of the bound image drawn, $x and $y must be 0 and
           $w and $h need to be the exact width and height of the image object
           itself, respectively.

           Warning: The default values for the fill parameters are $x = 0,
           $y = 0, $w = 0 and $h = 0. Thus, if you're not using the
           evas_object_image_filled_add() helper and want your image
           displayed, you'll have to set valid values with this function on
           your object.

           Note: evas_object_image_filled_set() is a helper function which
           will override the values set here automatically, for you, in a
           given way.
         ]]
            /* FIXME-doc
             * See the following image to better understand the effects of this
             * call. On this diagram, both image object and original image source
             * have $a x $a dimensions and the image itself is a circle, with
             * empty space around it:

             * @image html image-fill.png
             * @image rtf image-fill.png
             * @image latex image-fill.eps
             */
         set {}
         get {}
         values {
            x: int; [[The x coordinate (from the top left corner of the bound
                      image) to start drawing from.]]
            y: int; [[The y coordinate (from the top left corner of the bound
                      image) to start drawing from.]]
            w: int; [[The width the bound image will be displayed at.]]
            h: int; [[The height the bound image will be displayed at.]]
         }
      }
   }
}
