interface Efl.Image {
   legacy_prefix: null;
   methods {
      @property load_size {
         [[The loading size of an image.

           The image will be loaded into memory as if it was the set size
           instead of the original size. This can save a lot of memory,
           and is important for scalable types like svg.
         ]]
         set {
            [[Requests the canvas to load the image at the given size.]]
         }
         get {}
         values {
            w: int; [[Width of the image's load size.]]
            h: int; [[Height of the image's load size.]]
         }
      }
      @property smooth_scale {
         [[Whether to use high-quality image scaling algorithm for this image.

           When enabled, a higher quality image scaling algorithm is used
           when scaling images to sizes other than the source image's
           original one. This gives better results but is more
           computationally expensive.

           $true by default
         ]]
         set {}
         get {}
         values {
            smooth_scale: bool; [[Whether to use smooth scale or not.]]
         }
      }
      @property ratio {
         [[The native width/height ratio of the image.]]
         get {
            [[Returns 1.0 if not applicable (eg. height = 0).]]
         }
         values {
            ratio: double; [[The image's ratio.]]
         }
      }
   }
}
