enum Efl.Text.Cursor.Type
{
   under = 0,
   before
}

interface Efl.Text.Cursor {
   methods {
      @property type {
         [[Contols cursor type. It may change the cursor's geometry
           according to cursor type.
         ]]
         set {
         }
         get {
         }
         values {
            type: Efl.Text.Cursor.Type; [[The cursor's type]]
         }
      }
      @property position {
         set {
            [[Set the cursor pos.
            ]]
         }
         get {
            [[Return the current cursor pos.
            ]]
         }
         values {
            position: int; [[The cursor's position]]
         }
      }
      @property geometry {
         get {
            [[Returns the geometry of the cursor.
            ]]
         }
         values {
            x: int; [[Cursor X position]]
            y: int; [[Cursor Y position]]
            w: int; [[Cursor width]]
            h: int; [[Cursor height]]
         }
      }
      @property bidi {
         get {
            [[Returns the direction of the cursor.
            ]]
         }
         values {
            bidi: Efl.BiDi.Direction; [[the diretion of the cursor]]
         }
      }
      move_begin {
         [[Move the cursor to the beginning of text. 
         ]]
         return: bool; [[If the cursor is moved to the beginning of text, it returns true]]
      }
      move_end {
         [[Move the cursor to the end of text.
         ]]
         return: bool; [[If the cursor is moved to the end of text, it returns true]]
      }
      move_next {
         [[Move the cursor to the next position of text.
         ]]
         return: bool; [[If the cursor is moved to the next position of text, it returns true]]
      }
      move_prev {
         [[Move the cursor to the previous position of text.
         ]]
         return: bool; [[If the cursor is moved to the previous position of text, it returns true]]
      }
      move_up {
         [[Move the cursor to the above line of text. 
         ]]
         return: bool; [[If the cursor is moved to the above line of text, it returns true]]
      }
      move_down {
         [[Move the cursor to the below line of text.
         ]]
         return: bool; [[If the cursor is moved to the below line of text, it returns true]]]
      }
   }
}
